numVisits: 3
numPNodes: 6
numCNodes: 1
numROperators: 3
numAOperators: 0

hNodes : 3
wNodes : 2
nodeSubsetIndexes: [1 2 3 4 5 6] 

startNodeROperator: [5 4 3] 
originNodeROperator: [8 9 10] 
destinationNodeROperator: [11 12 13] 
cToP: [1] 
parkingNodeAOperator: [] 
chargingNodeAOperator: [] 

chargingSlotsAvailable: [4] 
totalNumberOfChargingSlots: [4] 

costOfDeviation : 10
costOfPostponedCharging : 30
costOfExtraTime : 0.5
costOfTravel: 0.05
costOfTravelH: 0.4

travelTimeVehicle: [0.0 10.3 10.3 14.6 20.6 23.0 1.0 
		10.3 0.0 14.6 10.3 23.0 20.6 10.3 
		10.3 14.6 0.0 10.3 10.3 14.6 10.3 
		14.6 10.3 10.3 0.0 14.6 10.3 14.6 
		20.6 23.0 10.3 14.6 0.0 10.3 20.6 
		23.0 20.6 14.6 10.3 10.3 0.0 23.0 
		1.0 10.3 10.3 14.6 20.6 23.0 0.0 ]

travelTimeBike: [0.0 20.6 20.6 29.2 41.2 46.0 1.0 
		20.6 0.0 29.2 20.6 46.0 41.2 20.6 
		20.6 29.2 0.0 20.6 20.6 29.2 20.6 
		29.2 20.6 20.6 0.0 29.2 20.6 29.2 
		41.2 46.0 20.6 29.2 0.0 20.6 41.2 
		46.0 41.2 29.2 20.6 20.6 0.0 46.0 
		1.0 20.6 20.6 29.2 41.2 46.0 0.0 ]

handlingTimeP: 4
handlingTimeC: 5
travelTimeToOriginR: [0 0 0] 
travelTimeToParkingA: [] 
timeLimit: 60
timeLimitLastVisit: 10
maxTravelHToC: 30

initialHandling: [0 0 0] 
initialRegularInP: [1 0 3 1 0 3] 
initialInNeedP: [1 1 0 1 0 0] 
finishedDuringC: [0] 
idealStateP: [1 2 2 2 0 1] 

demandP: [0 0 0 0 0 0] 

mode: 2
sequenceBigM: 10
visitList: [2 3 2 3 2 2 3 1 1 1 1 1 1] 

numCarMovesP : 6
numCarMovesC : 3
numCars : 6
numTasks : 5
numDeficitNodes : 2

deficitTranslate : [2 4] 
deficitCarsInNode : [2 1] 
carMoveCars : [1 1 2 2 3 3 4 5 6] 
carMoveOrigin : [3 3 6 6 6 6 1 2 4] 
carMoveDestination : [2 4 2 4 2 4 7 7 7] 
carMoveHandlingTime : [14.6 10.3 20.6 10.3 20.6 10.3 1.0 10.3 14.6] 
carMoveStartingTime : [0 0 0 0 0 0 0 0 0] 
numCarsInCNeedNodes : 3
carsInNeedCTranslate : [1 2 4] 
carsInNeedNodes : [1 1 1] 
bigMCars : [10.3 10.3 10.3 0.0 0.0 0.0]